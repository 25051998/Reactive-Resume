{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./apps/server/src/app/app.controller.ts","webpack:///./apps/server/src/app/app.module.ts","webpack:///./apps/server/src/auth/auth.controller.ts","webpack:///./apps/server/src/auth/auth.module.ts","webpack:///./apps/server/src/auth/auth.service.ts","webpack:///./apps/server/src/auth/dto/register.dto.ts","webpack:///./apps/server/src/auth/strategies/jwt.strategy.ts","webpack:///./apps/server/src/auth/strategies/local.strategy.ts","webpack:///./apps/server/src/config/database.ts","webpack:///./apps/server/src/config/environments.ts","webpack:///./apps/server/src/database/database.module.ts","webpack:///./apps/server/src/database/postgresErrorCodes.enum.ts","webpack:///./apps/server/src/main.ts","webpack:///./apps/server/src/users/user.decorator.ts","webpack:///./apps/server/src/users/user.entity.ts","webpack:///./apps/server/src/users/users.module.ts","webpack:///./apps/server/src/users/users.service.ts","webpack:///external \"@nestjs/common\"","webpack:///external \"@nestjs/config\"","webpack:///external \"@nestjs/core\"","webpack:///external \"@nestjs/jwt\"","webpack:///external \"@nestjs/passport\"","webpack:///external \"@nestjs/swagger\"","webpack:///external \"@nestjs/typeorm\"","webpack:///external \"bcrypt\"","webpack:///external \"class-transformer\"","webpack:///external \"class-validator\"","webpack:///external \"cookie-parser\"","webpack:///external \"joi\"","webpack:///external \"morgan\"","webpack:///external \"passport-jwt\"","webpack:///external \"passport-local\"","webpack:///external \"tslib\"","webpack:///external \"typeorm\""],"names":[],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import { Controller } from '@nestjs/common';\n\n@Controller()\nexport class AppController {}\n","import { Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\n\nimport { AuthModule } from '@/auth/auth.module';\nimport { UsersModule } from '@/users/users.module';\n\nimport validationSchema from '../config/environments';\nimport { DatabaseModule } from '../database/database.module';\nimport { AppController } from './app.controller';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({ validationSchema }),\n    DatabaseModule,\n    AuthModule,\n    UsersModule,\n  ],\n  controllers: [AppController],\n})\nexport class AppModule {}\n","import {\n  Body,\n  Controller,\n  Get,\n  HttpCode,\n  Post,\n  Req,\n  UseGuards,\n} from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\nimport User from '@/users/user.decorator';\nimport UserEntity from '@/users/user.entity';\n\nimport { AuthService } from './auth.service';\nimport RegisterDTO from './dto/register.dto';\nimport { RequestWithResponse } from './interface/request.interface';\n\n@Controller('auth')\nexport class AuthController {\n  constructor(private readonly authService: AuthService) {}\n\n  @UseGuards(AuthGuard('jwt'))\n  @Get('me')\n  me(@User() user: UserEntity) {\n    return user;\n  }\n\n  @Post('register')\n  async register(\n    @Req() request: RequestWithResponse,\n    @Body() registerDto: RegisterDTO\n  ) {\n    const user = await this.authService.register(registerDto);\n    const authCookie = this.authService.getLoginCookie(user.id);\n\n    request.res.setHeader('Set-Cookie', authCookie);\n\n    return user;\n  }\n\n  @HttpCode(200)\n  @UseGuards(AuthGuard('local'))\n  @Post('login')\n  async logIn(@User() user: UserEntity, @Req() request: RequestWithResponse) {\n    const authCookie = this.authService.getLoginCookie(user.id);\n\n    request.res.setHeader('Set-Cookie', authCookie);\n\n    return user;\n  }\n\n  @HttpCode(200)\n  @UseGuards(AuthGuard('jwt'))\n  @Post('logout')\n  async logOut(@Req() request: RequestWithResponse) {\n    const logoutCookie = this.authService.getLogoutCookie();\n\n    request.res.setHeader('Set-Cookie', logoutCookie);\n\n    return;\n  }\n}\n","import { Module } from '@nestjs/common';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { JwtModule } from '@nestjs/jwt';\nimport { PassportModule } from '@nestjs/passport';\n\nimport { UsersModule } from '@/users/users.module';\n\nimport { AuthController } from './auth.controller';\nimport { AuthService } from './auth.service';\nimport { JwtStrategy } from './strategies/jwt.strategy';\nimport { LocalStrategy } from './strategies/local.strategy';\n\n@Module({\n  imports: [\n    UsersModule,\n    PassportModule,\n    ConfigModule,\n    JwtModule.registerAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: (configService: ConfigService) => ({\n        secret: configService.get<string>('JWT_SECRET'),\n        signOptions: {\n          expiresIn: configService.get<number>('JWT_EXPIRATION_TIME'),\n        },\n      }),\n    }),\n  ],\n  providers: [AuthService, LocalStrategy, JwtStrategy],\n  controllers: [AuthController],\n})\nexport class AuthModule {}\n","import {\n  BadRequestException,\n  Injectable,\n  InternalServerErrorException,\n} from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { JwtService } from '@nestjs/jwt';\nimport * as bcrypt from 'bcrypt';\n\nimport { PostgresErrorCode } from '@/database/postgresErrorCodes.enum';\nimport { UsersService } from '@/users/users.service';\n\nimport RegisterDTO from './dto/register.dto';\nimport TokenPayload from './interface/token-payload.interface';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private readonly usersService: UsersService,\n    private readonly jwtService: JwtService,\n    private readonly configService: ConfigService\n  ) {}\n\n  public async register(registerDto: RegisterDTO) {\n    const hashedPassword = await bcrypt.hash(registerDto.password, 10);\n\n    try {\n      const createdUser = await this.usersService.create({\n        ...registerDto,\n        password: hashedPassword,\n      });\n\n      return createdUser;\n    } catch (error) {\n      if (error?.code === PostgresErrorCode.UniqueViolation) {\n        throw new BadRequestException(\n          'A user with that email address already exists. Could it be you?'\n        );\n      }\n\n      throw new InternalServerErrorException(\n        'Something went wrong, report this issue if the problem persists.'\n      );\n    }\n  }\n\n  public async login(email: string, plainTextPassword: string) {\n    try {\n      const user = await this.usersService.findByEmail(email);\n\n      await this.verifyPassword(plainTextPassword, user.password);\n\n      return user;\n    } catch (error) {\n      throw new BadRequestException(\n        'Incorrect username/password, please try again.'\n      );\n    }\n  }\n\n  private async verifyPassword(\n    plainTextPassword: string,\n    hashedPassword: string\n  ) {\n    const isPasswordMatching = await bcrypt.compare(\n      plainTextPassword,\n      hashedPassword\n    );\n\n    if (!isPasswordMatching) {\n      throw new BadRequestException(\n        'Incorrect username/password, please try again.'\n      );\n    }\n  }\n\n  public getToken(id: number) {\n    const payload: TokenPayload = { id };\n    const secret = this.configService.get<string>('JWT_SECRET');\n    const expiresIn = this.configService.get<number>('JWT_EXPIRATION_TIME');\n\n    return this.jwtService.sign(payload, {\n      secret,\n      expiresIn: `${expiresIn}s`,\n    });\n  }\n\n  public getLoginCookie(id: number) {\n    const token = this.getToken(id);\n    const expiresIn = this.configService.get<number>('JWT_EXPIRATION_TIME');\n\n    return `Authentication=${token}; HttpOnly; Path=/; Max-Age=${expiresIn}`;\n  }\n\n  public getLogoutCookie() {\n    return `Authentication=; HttpOnly; Path=/; Max-Age=0`;\n  }\n}\n","import { IsEmail, IsNotEmpty, IsString, MinLength } from 'class-validator';\n\nexport default class RegisterDTO {\n  @IsString()\n  @IsNotEmpty()\n  name: string;\n\n  @IsEmail()\n  @IsNotEmpty()\n  email: string;\n\n  @MinLength(6)\n  @IsNotEmpty()\n  password: string;\n}\n","import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Request } from 'express';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\n\nimport { UsersService } from '@/users/users.service';\n\nimport TokenPayload from '../interface/token-payload.interface';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor(\n    private readonly configService: ConfigService,\n    private readonly userService: UsersService\n  ) {\n    super({\n      jwtFromRequest: ExtractJwt.fromExtractors([\n        (request: Request) => {\n          return request?.cookies?.Authentication;\n        },\n      ]),\n      secretOrKey: configService.get<string>('JWT_SECRET'),\n    });\n  }\n\n  async validate({ id }: TokenPayload) {\n    return this.userService.findById(id);\n  }\n}\n","import { Injectable } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Strategy } from 'passport-local';\n\nimport { AuthService } from '@/auth/auth.service';\nimport User from '@/users/user.entity';\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n  constructor(private authService: AuthService) {\n    super({ usernameField: 'email' });\n  }\n\n  async validate(email: string, password: string): Promise<User> {\n    return this.authService.login(email, password);\n  }\n}\n","import { ConfigService } from '@nestjs/config';\nimport { TypeOrmModuleOptions } from '@nestjs/typeorm';\n\nconst databaseConfig = (\n  configService: ConfigService\n): TypeOrmModuleOptions => ({\n  type: 'postgres',\n  host: configService.get<string>('POSTGRES_HOST'),\n  port: configService.get<number>('POSTGRES_PORT'),\n  username: configService.get<string>('POSTGRES_USER'),\n  password: configService.get<string>('POSTGRES_PASSWORD'),\n  database: configService.get<string>('POSTGRES_DB'),\n  autoLoadEntities: true,\n  synchronize: true,\n});\n\nexport default databaseConfig;\n","import * as Joi from 'joi';\n\nconst validationSchema = Joi.object({\n  JWT_SECRET: Joi.string().required(),\n  JWT_EXPIRATION_TIME: Joi.number().required(),\n  SESSION_SECRET: Joi.string().required(),\n\n  POSTGRES_HOST: Joi.string().default('localhost'),\n  POSTGRES_PORT: Joi.number().default(5432),\n  POSTGRES_USER: Joi.string().required(),\n  POSTGRES_PASSWORD: Joi.string().required(),\n  POSTGRES_DB: Joi.string().default('reactive-resume'),\n\n  NODE_ENV: Joi.string()\n    .valid('development', 'production', 'test', 'provision')\n    .default('development'),\n  PORT: Joi.number().default(3000),\n});\n\nexport default validationSchema;\n","import { Module } from '@nestjs/common';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport databaseConfig from '@/config/database';\n\n@Module({\n  imports: [\n    TypeOrmModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: databaseConfig,\n    }),\n  ],\n})\nexport class DatabaseModule {}\n","export enum PostgresErrorCode {\n  UniqueViolation = '23505',\n}\n","import {\n  ClassSerializerInterceptor,\n  Logger,\n  ValidationPipe,\n} from '@nestjs/common';\nimport { NestFactory, Reflector } from '@nestjs/core';\nimport { DocumentBuilder, SwaggerModule } from '@nestjs/swagger';\nimport * as cookieParser from 'cookie-parser';\nimport * as morgan from 'morgan';\n\nimport { AppModule } from './app/app.module';\n\nconst bootstrap = async () => {\n  const app = await NestFactory.create(AppModule);\n  const port = process.env.PORT || 3000;\n  const prefix = 'api';\n\n  // Pipes\n  app.useGlobalPipes(new ValidationPipe({ transform: true }));\n\n  // Interceptors\n  const reflector = app.get(Reflector);\n  app.useGlobalInterceptors(new ClassSerializerInterceptor(reflector));\n\n  // Middleware\n  app.use(cookieParser());\n  app.use(morgan('tiny'));\n  app.setGlobalPrefix(prefix);\n\n  // Swagger\n  const config = new DocumentBuilder()\n    .setTitle('Reactive Resume')\n    .setDescription('A free and open-source resume builder.')\n    .setVersion('1.0')\n    .build();\n  const document = SwaggerModule.createDocument(app, config);\n  SwaggerModule.setup('/docs', app, document);\n\n  await app.listen(port, () => {\n    Logger.log('Listening at http://localhost:' + port + '/' + prefix);\n  });\n};\n\nbootstrap();\n","import { createParamDecorator, ExecutionContext } from '@nestjs/common';\n\nconst User = createParamDecorator((data: string, ctx: ExecutionContext) => {\n  const request = ctx.switchToHttp().getRequest();\n  const user = request.user;\n\n  return data ? user?.[data] : user;\n});\n\nexport default User;\n","import { Exclude } from 'class-transformer';\nimport { Column, Entity, Index, PrimaryGeneratedColumn } from 'typeorm';\n\n@Entity()\nclass User {\n  @PrimaryGeneratedColumn()\n  public id?: number;\n\n  @Column()\n  public name: string;\n\n  @Index()\n  @Column({ unique: true })\n  public email: string;\n\n  @Column()\n  @Exclude()\n  public password: string;\n}\n\nexport default User;\n","import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport User from './user.entity';\nimport { UsersService } from './users.service';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([User])],\n  providers: [UsersService],\n  exports: [UsersService],\n})\nexport class UsersModule {}\n","import { HttpException, HttpStatus, Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\n\nimport CreateUserDTO from './dto/create-user.dto';\nimport User from './user.entity';\n\n@Injectable()\nexport class UsersService {\n  constructor(\n    @InjectRepository(User)\n    private readonly usersRepository: Repository<User>\n  ) {}\n\n  async findById(id: number) {\n    const user = await this.usersRepository.findOne({ id });\n\n    if (user) {\n      return user;\n    }\n\n    throw new HttpException(\n      `Could not find user with id ${id}.`,\n      HttpStatus.NOT_FOUND\n    );\n  }\n\n  async findByEmail(email: string) {\n    const user = await this.usersRepository.findOne({ email });\n\n    if (user) {\n      return user;\n    }\n\n    throw new HttpException(\n      'Incorrect username/password, please try again.',\n      HttpStatus.NOT_FOUND\n    );\n  }\n\n  async create(createUserDto: CreateUserDTO) {\n    const newUser = this.usersRepository.create(createUserDto);\n\n    await this.usersRepository.save(newUser);\n\n    return newUser;\n  }\n}\n","module.exports = require(\"@nestjs/common\");","module.exports = require(\"@nestjs/config\");","module.exports = require(\"@nestjs/core\");","module.exports = require(\"@nestjs/jwt\");","module.exports = require(\"@nestjs/passport\");","module.exports = require(\"@nestjs/swagger\");","module.exports = require(\"@nestjs/typeorm\");","module.exports = require(\"bcrypt\");","module.exports = require(\"class-transformer\");","module.exports = require(\"class-validator\");","module.exports = require(\"cookie-parser\");","module.exports = require(\"joi\");","module.exports = require(\"morgan\");","module.exports = require(\"passport-jwt\");","module.exports = require(\"passport-local\");","module.exports = require(\"tslib\");","module.exports = require(\"typeorm\");"],"sourceRoot":""}